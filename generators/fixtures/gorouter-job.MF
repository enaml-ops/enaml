---
name: gorouter

description: "The Router maintains a list of live routes for the applications running on each DEA. The Router load balances requests (based on their Host header) between each application instance registered for a specific route. It requires to be behind a load balancer that can terminate SSL connections."

templates:
  gorouter_ctl.erb: bin/gorouter_ctl
  dns_health_check.erb: bin/dns_health_check
  gorouter.yml.erb: config/gorouter.yml
  gorouter_logrotate.cron.erb: config/gorouter_logrotate.cron
  logrotate.conf.erb: config/logrotate.conf
  drain: bin/drain
  cert.pem.erb: config/cert.pem
  key.pem.erb: config/key.pem
  uaa_ca.crt.erb: config/certs/uaa/ca.crt

packages:
  - routing_utils
  - gorouter

properties:
  router.port:
    description: "Listening Port for Router."
    default: 80
  router.status.port:
    description: "Port for the Router varz/status endpoint."
    default: 8080
  router.status.user:
    description: "Username for HTTP basic auth to the varz/status endpoint."
  router.status.password:
    description: "Password for HTTP basic auth to the varz/status endpoint."
  router.requested_route_registration_interval_in_seconds:
    description: "On startup, the router will delay listening for requests by this duration to increase likelihood that it has a complete routing table before serving requests. The router also broadcasts the same duration as a recommended interval to registering clients via NATS."
    default: 20
  router.number_of_cpus:
    description: "Number of CPUs to utilize, the default (-1) will equal the number of available CPUs"
    default: -1
  router.debug_addr:
    description: "Address at which to serve debug info"
    default: "0.0.0.0:17001"
  router.secure_cookies:
    description: "Set secure flag on http cookies"
    default: false
  router.drain_wait:
    description: |
      Delay in seconds after drain begins before server stops listening.
      During this time the server will respond with 503 Service Unavailable to
      requests having header User-Agent: HTTP-Monitor/1.1. This accommodates
      requests in transit sent while health check responded ok.
    default: 0
  router.enable_ssl:
    description: "Enable ssl termination on the router"
    default: false
  router.dns_health_check_host:
      description: "Host to ping for confirmation of DNS resolution, only used when Routing API is enabled"
      default: "consul.service.cf.internal"
  router.ssl_cert:
    description: "The public ssl cert for ssl termination"
    default: ""
  router.ssl_key:
    description: "The private ssl key for ssl termination"
    default: ""
  router.ssl_skip_validation:
    description: "Skip SSL client cert validation"
    default: false
  router.cipher_suites:
    description:
      An ordered list of supported SSL cipher suites containing golang tls constants separated by colons
      The cipher suite will be chosen according to this order during SSL handshake
    default: "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA:TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA:TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA:TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA:TLS_RSA_WITH_AES_128_CBC_SHA:TLS_RSA_WITH_AES_256_CBC_SHA"
  router.route_services_secret:
    description: "Support for route services is disabled when no value is configured. A robust passphrase is recommended."
    default: ""
  router.route_services_secret_decrypt_only:
    description: "To rotate keys, add your new key here and deploy. Then swap this key with the value of route_services_secret and deploy again."
    default: ""
  router.route_services_recommend_https:
    description: "Route Services are told where to send requests after processing using the X-CF-Forwarded-Url header. When this property is true, the scheme for this URL is https. When false, the scheme is http. As requests from Route Services to applications on CF transit load balancers and gorouter, disable this property for deployments that have TLS termination disabled."
    default: true
  router.route_services_timeout:
    description: "Expiry time of a route service signature in seconds"
    default: 60
  router.logrotate.freq_min:
    description: "The frequency in minutes which logrotate will rotate VM logs"
    default: 5
  router.logrotate.rotate:
    description: "The number of files that logrotate will keep around on the VM"
    default: 7
  router.logrotate.size:
    description: "The size at which logrotate will decide to rotate the log file"
    default: 2M
  router.extra_headers_to_log:
    description: "A list of headers that log events will be annotated with"
    default: []
  router.logging_level:
    description: "Log level for router"
    default: "info"

  nats.user:
    description:
  nats.password:
    description:
  nats.port:
    description:
  nats.machines:
    description: "IP of each NATS cluster member."
  router.offset:
    description:
    default: 0
  router.trace_key:
    description:
      If the X-Vcap-Trace request header is set and has this value,
      trace headers are added to the response.
    default: 22
  request_timeout_in_seconds:
    description: "Timeout in seconds for Router -> Endpoint roundtrip."
    default: 900

  metron.port:
    description: "The port used to emit dropsonde messages to the Metron agent."
    default: 3457

  uaa.clients.gorouter.secret:
    description: "Password for UAA client for the gorouter."
  uaa.port:
    description: "Port on which UAA is running."
    default: 8080
  uaa.ssl.port:
    description: "Secure Port on which UAA is running."

  routing_api.port:
    description: "Port on which routing-api is running."
    default: 3000
  routing_api.auth_disabled:
    description: "Disables UAA authentication"
    default: false
  routing_api.enabled:
    description: "Enable the GoRouter to receive routes from the Routing API"
    default: false
  router.enable_access_log_streaming:
    description: "Enables streaming of access log to syslog. Warning: this comes with a performance cost; due to higher I/O, max request rate is reduced."
    default: false

  uaa.ca_cert:
    decription : "Certificate authority for communication between clients and uaa."
    default: ""
